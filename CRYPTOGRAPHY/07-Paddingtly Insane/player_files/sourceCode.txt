// See https://aka.ms/new-console-template for more information
using System.Security.Cryptography;
using System.Text;


/*
 * TODO:
 * Change key
 * Use input instead of commandline arg
 */


class MainReturnValTest
{
    static String ExampleFunction(string payload)
    {
        String val = String.Empty; //initialize value as empty
        Aes algo = Aes.Create();
        algo.KeySize = 128;
        algo.Key = new byte[] { 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x21, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x21 };
        algo.IV = new byte[] { 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08 };
        
        try
        {
            byte[] cipherText = ConvertToBytes(payload);
       
            algo.DecryptCbc(cipherText, algo.IV, System.Security.Cryptography.PaddingMode.PKCS7);
            val = "authenticated";
            return val;
        }
        catch (System.Security.Cryptography.CryptographicException e)
        {
            Console.WriteLine(e.HResult);
        }
        Console.WriteLine(val);
        return val;
    }


    static byte[] ConvertToBytes(String payload)
    {
        byte[] bytes = payload.Select(c => (byte)c).ToArray();

        return bytes;
    }
    static void Introduction()
    {
        //not important to the challenge BTW
        Console.WriteLine("\r\n  _____ _        _    ____   ____ _____ ___  ____      _    ____ _____   _____ _    ____ ___ _     ___ _______   __" +
                          "\r\n |  ___| |      / \\  / ___| / ___|_   _/ _ \\|  _ \\    / \\  / ___| ____| |  ___/ \\  / ___|_ _| |   |_ _|_   _\\ \\ / /" +
                          "\r\n | |_  | |     / _ \\| |  _  \\___ \\ | || | | | |_) |  / _ \\| |  _|  _|   | |_ / _ \\| |    | || |    | |  | |  \\ V / " +
                          "\r\n |  _| | |___ / ___ \\ |_| |  ___) || || |_| |  _ <  / ___ \\ |_| | |___  |  _/ ___ \\ |___ | || |___ | |  | |   | |  " +
                          "\r\n |_|   |_____/_/   \\_\\____| |____/ |_| \\___/|_| \\_\\/_/   \\_\\____|_____| |_|/_/   \\_\\____|___|_____|___| |_|   |_|  " +
                          "\r\n                                                                                                                   "
                          );
        Console.WriteLine("--------------------------------------------------------------------------------------------------------------------");
        return;
    }

    static void Main(string[] args)
    {
        Introduction();
        Console.WriteLine("Please enter your encrypted authentication string to access the flag:");
        String result = ExampleFunction(args[0]);

        if (!String.IsNullOrEmpty(result))
        {
            Console.WriteLine("FLAG");
        }
    }
}
